name: Dependency Review

# trigger on main branch but only if specific files or paths have changes
on:
  pull_request:
    branches:
      - main
    paths:
      # only check if a manifest file has changed
      - "Dockerfile"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/**"

# ensures only one run of the workflow happens per branch or per run (if not associated with a branch)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Find the configuration options here: https://github.com/actions/dependency-review-action?tab=readme-ov-file#configuration-options
      # The configuration here is verbose so the behavior should be more self-documenting.
      - uses: actions/dependency-review-action@v4
        with:
          # this will fail if the security advisory database has a minimum level of "fail-on-severity" value or higher.
          fail-on-severity: high
          # This will show a summary of the results in the PR only when there's a failure
          # If a report is present, it will only contain checks for package managers that are part of the PR and only for those dependencies that have been changes/added.
          comment-summary-in-pr: "on-failure"
          # Any number of packages to block in a PR.
          # BUG: This does not flag any sort of error at all. It should fail the check if the package is found.
          deny-packages: "pkg:pypi/pycrypto, pkg:pypi/anarchy-bot"
          # Deny all copy-left licenses
          # FEATURE REQUEST: There is no way to fail on an unknown license. If we could fail on an unknown license we could force a review and either allow the dependeices or deny the request.
          # Over 10% of python packages are shipped 
          # The action readme says: We don't have license information for all of your dependents. If we can't detect the license for a dependency we will inform you, but the action won't fail.
          deny-licenses: "GPL-1.0, GPL-2.0, GPL-3.0, AGPL-1.0, AGPL-3.0, LGPL-2.1, LGPL-3.0, MPL-2.0, CDDL-1.0, EPL-1.0"
          # If a license is used that does not appear in this list, the action will fail
          # BUG: You cannot specify both deny-licenses and allow-licenses or you get an error:  "message": "You cannot specify both allow-licenses and deny-licenses"
          #allow-licenses: "MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, BSL-1.0, CC0-1.0, Unlicense, ISC"
          # # BUG: This option is flagged as unknown
          # show-openssf-scorecard-levels: true
          # Allow list of packages that may have failed a license check but are explicitly OK. NOTE: Not supported for use with GitHub Enterprise Server
          # If a report is in the PR, it will say "Excluded from license check: pkg:pypi/paramiko"
          allow-dependencies-licenses: "pkg:pypi/paramiko"
          
